@baseUrl = http://localhost:4000
@authToken = {{authToken}}

### ================== ROLE USERS ==================

### Crear role-user (publico)
POST {{baseUrl}}/api/role-user/public
Content-Type: application/json

{
  "role_id": 1,
  "user_id": 1,
  "is_active": "ACTIVE"
}

### Listar role-users (publico)
GET {{baseUrl}}/api/role-users/public
Accept: application/json

### Obtener role-user por id (publico)
GET {{baseUrl}}/api/role-user/1/public
Accept: application/json

### Actualizar role-user (publico)
PATCH {{baseUrl}}/api/role-user/1/public
Content-Type: application/json

{
  "role_id": 2,
  "is_active": "ACTIVE"
}

### Eliminar role-user fisicamente (publico)
DELETE {{baseUrl}}/api/role-user/1/public

### Baja logica de role-user (publico)
PATCH {{baseUrl}}/api/role-user/1/logic/public
Content-Type: application/json

{
  "is_active": "INACTIVE"
}

### Crear role-user (con auth)
POST {{baseUrl}}/api/role-user
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "role_id": 3,
  "user_id": 2,
  "is_active": "ACTIVE"
}

### Listar role-users (con auth)
GET {{baseUrl}}/api/role-users
Authorization: Bearer {{authToken}}
Accept: application/json

### Obtener role-user por id (con auth)
GET {{baseUrl}}/api/role-user/1
Authorization: Bearer {{authToken}}
Accept: application/json

### Actualizar role-user (con auth)
PATCH {{baseUrl}}/api/role-user/1
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "role_id": 3,
  "is_active": "ACTIVE"
}

### Eliminar role-user fisicamente (con auth)
DELETE {{baseUrl}}/api/role-user/1
Authorization: Bearer {{authToken}}

### Baja logica de role-user (con auth)
PATCH {{baseUrl}}/api/role-user/1/logic
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "is_active": "INACTIVE"
}
