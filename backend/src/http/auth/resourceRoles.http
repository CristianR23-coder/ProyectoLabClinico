@baseUrl = http://localhost:4000
@authToken = {{authToken}}

### ================== RESOURCE ROLES ==================

### Crear resource-role (publico)
POST {{baseUrl}}/api/resource-role/public
Content-Type: application/json

{
  "resource_id": 1,
  "role_id": 1,
  "is_active": "ACTIVE"
}

### Listar resource-roles (publico)
GET {{baseUrl}}/api/resource-roles/public
Accept: application/json

### Obtener resource-role por id (publico)
GET {{baseUrl}}/api/resource-role/1/public
Accept: application/json

### Actualizar resource-role (publico)
PATCH {{baseUrl}}/api/resource-role/1/public
Content-Type: application/json

{
  "is_active": "ACTIVE"
}

### Eliminar resource-role fisicamente (publico)
DELETE {{baseUrl}}/api/resource-role/1/public

### Baja logica de resource-role (publico)
PATCH {{baseUrl}}/api/resource-role/1/logic/public
Content-Type: application/json

{
  "is_active": "INACTIVE"
}

### Crear resource-role (con auth)
POST {{baseUrl}}/api/resource-role
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "resource_id": 2,
  "role_id": 3,
  "is_active": "ACTIVE"
}

### Listar resource-roles (con auth)
GET {{baseUrl}}/api/resource-roles
Authorization: Bearer {{authToken}}
Accept: application/json

### Obtener resource-role por id (con auth)
GET {{baseUrl}}/api/resource-role/1
Authorization: Bearer {{authToken}}
Accept: application/json

### Actualizar resource-role (con auth)
PATCH {{baseUrl}}/api/resource-role/1
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "is_active": "ACTIVE"
}

### Eliminar resource-role fisicamente (con auth)
DELETE {{baseUrl}}/api/resource-role/1
Authorization: Bearer {{authToken}}

### Baja logica de resource-role (con auth)
PATCH {{baseUrl}}/api/resource-role/1/logic
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "is_active": "INACTIVE"
}
